{
  "hash": "3661a6469dfb2ebe7855091a6732ad4f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Taming Multi-Dimensional Tables with `gt`\"\ndescription: \"Learn how to create multi-dimensional tables in R using the GT package. This step-by-step tutorial covers the challenges of nested column headers, handling NA values in count data, and moving beyond `tab_spanner_delim()` for full customisation control. Perfect for R users wanting to create publication-ready tables with complex structures.\"\nauthor: \"Daniel Dauber\"\ndate: 2025-06-30\ncategories: [R, data visualisation, gt, tables]\ndraft: false\nimage: \"multi-dimensional-gt-tables-r.jpg\"\n---\n\n\n::: slide-in\n<img src=\"multi-dimensional-gt-tables-r.jpg\" alt=\"MPG vs weight plot\" width=\"100%\">\n:::\n\nCreating beautiful tables in R has never been easier thanks to the [`gt` package](https://gt.rstudio.com/). But what happens when your \"simple\" table suddenly needs three dimensions? That's when things get interesting – and by interesting, I mean frustratingly complex.\n\nToday, we'll walk through creating a multi-dimensional table that displays relationship status by gender across different countries. We'll start simple and work our way up to the challenges that make you question your life choices (and then solve them, of course).\n\n## Meet the GT Package\n\nThe [`gt` package](https://gt.rstudio.com/) by RStudio is a grammar of tables that makes creating publication-ready tables surprisingly enjoyable. Think of it as `ggplot2` for tables – it's structured, flexible, and produces gorgeous output with relatively little code.\n\nThe package follows a layered approach: you start with your data, create a basic `gt()` object, then add layers of formatting, styling, and functionality. Each function adds a specific element to your table, making the code readable and the process intuitive.\n\nIf you're new to R or finding this tutorial challenging to follow, I'd recommend checking out [R for Non-Programmers](https://r4np.com) for a more gentle introduction to R fundamentals.\n\n## Our Data: World Values Survey\n\nWe'll be working with data from the World Values Survey (WVS), which contains responses from people across different countries about their values and demographics. The `wvs_nona` dataset is a cleaned version where missing values have been removed (hence \"nona\" = no NAs).\n\nIf you want to follow along, you can get the dataset from the [`r4np` package](https://github.com/yourrepo/r4np):\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\n# Install if you haven't already\n# install.packages(\"r4np\")\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(gt)\nlibrary(gtExtras)\nlibrary(r4np)\n\n# The dataset we'll use\nhead(wvs_nona)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  country gender   age relationship_status freedom_of_choice satisfaction\n  <fct>   <fct>  <dbl> <fct>                           <dbl>        <dbl>\n1 Bolivia male      60 married                             7            5\n2 Bolivia male      40 married                             8            7\n3 Bolivia male      25 single                             10            8\n4 Bolivia female    71 widowed                             5            5\n5 Bolivia female    38 married                             5            7\n6 Bolivia female    20 separated                           5            3\n```\n\n\n:::\n:::\n\n\nOur goal is to create a table showing the relationship between three variables: `country`, `gender`, and `relationship_status`. This is what makes it \"multi-dimensional\" – we're not just showing a simple two-way relationship, but a three-way interaction.\n\n## Step 1: The Innocent Beginning\n\nLet's start with what seems like a straightforward task: create a table showing the count of married, separated, and divorced people by gender across countries.\n\nFirst, we need to count the combinations of our three variables:\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\n# Create our base data\ntable_data <- wvs_nona %>%\n  count(gender, country, relationship_status) %>%\n  filter(relationship_status %in% c(\"married\", \"separated\", \"divorced\"))\n\n# Take a peek\nhead(table_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  gender country relationship_status     n\n  <fct>  <fct>   <fct>               <int>\n1 female Bolivia married               383\n2 female Bolivia separated              62\n3 female Bolivia divorced               27\n4 female Iran    married               448\n5 female Iran    separated               4\n6 female Iran    divorced               24\n```\n\n\n:::\n:::\n\n\nThe `count()` function is doing the heavy lifting here. It groups by the three variables we specify and counts how many observations fall into each combination. The `filter()` step narrows our focus to just three relationship statuses – we're keeping the analysis manageable.\n\nThis gives us a \"long\" format dataset where each row represents one combination of country, gender, and relationship status, with the count in the `n` column.\n\nNow we need to reshape this data to make it suitable for a table. We want countries as rows and the gender-relationship combinations as columns:\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\n# Reshape for table format\nwide_data <- table_data %>%\n  pivot_wider(id_cols = country,\n              names_from = c(gender, relationship_status),\n              values_from = n)\n\nhead(wide_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n  country female_married female_separated female_divorced male_married\n  <fct>            <int>            <int>           <int>        <int>\n1 Bolivia            383               62              27          376\n2 Iran               448                4              24          518\n3 Iraq               442                6              10          423\n4 Japan              525                4              49          464\n5 Korea              491                1               1          407\n6 Egypt              399               10              23          434\n# ℹ 2 more variables: male_separated <int>, male_divorced <int>\n```\n\n\n:::\n:::\n\n\n`pivot_wider()` is the magic function here. Let's break down what each argument does:\n\n- `id_cols = country`: This tells R that `country` should remain as a column (our row identifier)\n- `names_from = c(gender, relationship_status)`: These two variables will become column names\n- `values_from = n`: The values that fill the table come from the `n` column (our counts)\n\nThe result is columns with names like `female_married`, `male_divorced`, etc. R automatically combines the values from `gender` and `relationship_status` with an underscore.\n\nNow let's create our first GT table:\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\n# Our first attempt\nbasic_table <- wide_data %>%\n  gt() %>%\n  tab_header(\n    title = \"World Value Survey (WVS)\",\n    subtitle = \"Relationship Status by Gender and Country\"\n  )\n\nbasic_table\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ualuxbdyfa\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ualuxbdyfa table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ualuxbdyfa thead, #ualuxbdyfa tbody, #ualuxbdyfa tfoot, #ualuxbdyfa tr, #ualuxbdyfa td, #ualuxbdyfa th {\n  border-style: none;\n}\n\n#ualuxbdyfa p {\n  margin: 0;\n  padding: 0;\n}\n\n#ualuxbdyfa .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ualuxbdyfa .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ualuxbdyfa .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ualuxbdyfa .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ualuxbdyfa .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ualuxbdyfa .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ualuxbdyfa .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ualuxbdyfa .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ualuxbdyfa .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ualuxbdyfa .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ualuxbdyfa .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ualuxbdyfa .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ualuxbdyfa .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ualuxbdyfa .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ualuxbdyfa .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ualuxbdyfa .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ualuxbdyfa .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ualuxbdyfa .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ualuxbdyfa .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ualuxbdyfa .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ualuxbdyfa .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ualuxbdyfa .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ualuxbdyfa .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ualuxbdyfa .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ualuxbdyfa .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ualuxbdyfa .gt_left {\n  text-align: left;\n}\n\n#ualuxbdyfa .gt_center {\n  text-align: center;\n}\n\n#ualuxbdyfa .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ualuxbdyfa .gt_font_normal {\n  font-weight: normal;\n}\n\n#ualuxbdyfa .gt_font_bold {\n  font-weight: bold;\n}\n\n#ualuxbdyfa .gt_font_italic {\n  font-style: italic;\n}\n\n#ualuxbdyfa .gt_super {\n  font-size: 65%;\n}\n\n#ualuxbdyfa .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ualuxbdyfa .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ualuxbdyfa .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ualuxbdyfa .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ualuxbdyfa .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ualuxbdyfa .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ualuxbdyfa .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#ualuxbdyfa .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#ualuxbdyfa div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"7\" class=\"gt_heading gt_title gt_font_normal\" style>World Value Survey (WVS)</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"7\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Relationship Status by Gender and Country</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"country\">country</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"female_married\">female_married</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"female_separated\">female_separated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"female_divorced\">female_divorced</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"male_married\">male_married</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"male_separated\">male_separated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"male_divorced\">male_divorced</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Bolivia</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">383</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">62</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">27</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">376</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">34</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">24</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Iran</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">448</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">4</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">24</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">518</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">8</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">6</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Iraq</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">442</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">6</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">10</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">423</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">5</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">9</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Japan</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">525</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">4</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">49</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">464</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">1</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">20</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Korea</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">491</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">1</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">1</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">407</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">7</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Egypt</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">399</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">10</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">23</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">434</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">7</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">9</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nThe `gt()` function creates the basic table object, and `tab_header()` adds a title and subtitle. Simple enough, but not very pretty.\n\n## Step 2: The Plot Thickens\n\nOur basic table works, but it's not exactly reader-friendly. Those column names like `female_married` are functional but ugly. We want to group them under gender headers with clean sub-labels.\n\n\"No problem,\" you think, \"I'll just use `tab_spanner_delim()`!\"\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\n# Attempt with tab_spanner_delim()\nspanners_attempt <- wide_data %>%\n  gt() %>%\n  tab_header(\n    title = \"World Value Survey (WVS)\",\n    subtitle = \"Relationship Status by Gender and Country\"  \n  ) %>%\n  tab_spanner_delim(delim = \"_\")\n\nspanners_attempt\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"nwmojxwmez\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#nwmojxwmez table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#nwmojxwmez thead, #nwmojxwmez tbody, #nwmojxwmez tfoot, #nwmojxwmez tr, #nwmojxwmez td, #nwmojxwmez th {\n  border-style: none;\n}\n\n#nwmojxwmez p {\n  margin: 0;\n  padding: 0;\n}\n\n#nwmojxwmez .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#nwmojxwmez .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#nwmojxwmez .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#nwmojxwmez .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#nwmojxwmez .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#nwmojxwmez .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#nwmojxwmez .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#nwmojxwmez .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#nwmojxwmez .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#nwmojxwmez .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#nwmojxwmez .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#nwmojxwmez .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#nwmojxwmez .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#nwmojxwmez .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#nwmojxwmez .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nwmojxwmez .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#nwmojxwmez .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#nwmojxwmez .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#nwmojxwmez .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nwmojxwmez .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#nwmojxwmez .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nwmojxwmez .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#nwmojxwmez .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nwmojxwmez .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#nwmojxwmez .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#nwmojxwmez .gt_left {\n  text-align: left;\n}\n\n#nwmojxwmez .gt_center {\n  text-align: center;\n}\n\n#nwmojxwmez .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#nwmojxwmez .gt_font_normal {\n  font-weight: normal;\n}\n\n#nwmojxwmez .gt_font_bold {\n  font-weight: bold;\n}\n\n#nwmojxwmez .gt_font_italic {\n  font-style: italic;\n}\n\n#nwmojxwmez .gt_super {\n  font-size: 65%;\n}\n\n#nwmojxwmez .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#nwmojxwmez .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#nwmojxwmez .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#nwmojxwmez .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#nwmojxwmez .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#nwmojxwmez .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#nwmojxwmez .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#nwmojxwmez .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#nwmojxwmez div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"7\" class=\"gt_heading gt_title gt_font_normal\" style>World Value Survey (WVS)</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"7\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Relationship Status by Gender and Country</td>\n    </tr>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"country\">country</th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"spanner-female_married\">\n        <div class=\"gt_column_spanner\">female</div>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"spanner-male_married\">\n        <div class=\"gt_column_spanner\">male</div>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"female_married\">married</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"female_separated\">separated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"female_divorced\">divorced</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"male_married\">married</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"male_separated\">separated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"male_divorced\">divorced</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Bolivia</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">383</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">62</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">27</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">376</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">34</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">24</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Iran</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">448</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">4</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">24</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">518</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">8</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">6</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Iraq</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">442</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">6</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">10</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">423</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">5</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">9</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Japan</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">525</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">4</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">49</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">464</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">1</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">20</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Korea</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">491</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">1</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">1</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">407</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">7</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Egypt</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">399</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">10</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">23</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">434</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">7</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">9</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n`tab_spanner_delim()` is GT's convenient function for automatically creating column groups. It looks at your column names, splits them at the delimiter you specify (in this case, the underscore), and creates grouped headers.\n\nThis creates the gender groupings automatically by splitting on the underscore. The part before the underscore becomes the group header (\"female\", \"male\"), and the part after becomes the column label (\"married\", \"separated\", \"divorced\").\n\nIt's clean, it's automatic, and it... doesn't let you customise the subcategory labels. You're stuck with \"married\", \"separated\", \"divorced\" exactly as they appear in your column names.\n\nWhat if you want \"Married\" (capitalised), \"Sep.\" (abbreviated), or \"Divorced/Separated\" (combined)? What if you want to style them with bold or italic text? `tab_spanner_delim()` just shrugs and says \"take it or leave it.\"\n\n## Step 3: The Manual Labor Solution\n\nThis is where GT shows both its power and its complexity. To get full control, we need to manually create our spanners and relabel our columns. It's more work, but it's infinitely more flexible.\n\nLet's break this down step by step:\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\n# The manual approach - more control, more code\ncustom_table <- wide_data %>%\n  gt() %>%\n  tab_header(\n    title = \"World Value Survey (WVS)\",\n    subtitle = \"Data extract from r4np\"\n  ) %>%\n  \n  # Step 1: Create individual gender spanners\n  tab_spanner(\n    label = md(\"*female*\"),\n    columns = starts_with(\"female_\")\n  ) %>%\n  tab_spanner(\n    label = md(\"*male*\"), \n    columns = starts_with(\"male_\")\n  ) %>%\n  \n  # Step 2: Create an overarching gender spanner\n  tab_spanner(\n    label = md(\"**Gender**\"),\n    columns = starts_with(c(\"female_\", \"male_\")),\n    id = \"gender\"\n  ) %>%\n  \n  # Step 3: Customise individual column labels\n  cols_label(\n    country = md(\"**Country**\"),\n    ends_with(\"married\") ~ \"Married\",\n    ends_with(\"separated\") ~ \"Separated\", \n    ends_with(\"divorced\") ~ \"Divorced\"\n  )\n\ncustom_table\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"obbnoaphed\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#obbnoaphed table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#obbnoaphed thead, #obbnoaphed tbody, #obbnoaphed tfoot, #obbnoaphed tr, #obbnoaphed td, #obbnoaphed th {\n  border-style: none;\n}\n\n#obbnoaphed p {\n  margin: 0;\n  padding: 0;\n}\n\n#obbnoaphed .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#obbnoaphed .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#obbnoaphed .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#obbnoaphed .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#obbnoaphed .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#obbnoaphed .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#obbnoaphed .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#obbnoaphed .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#obbnoaphed .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#obbnoaphed .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#obbnoaphed .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#obbnoaphed .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#obbnoaphed .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#obbnoaphed .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#obbnoaphed .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#obbnoaphed .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#obbnoaphed .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#obbnoaphed .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#obbnoaphed .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#obbnoaphed .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#obbnoaphed .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#obbnoaphed .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#obbnoaphed .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#obbnoaphed .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#obbnoaphed .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#obbnoaphed .gt_left {\n  text-align: left;\n}\n\n#obbnoaphed .gt_center {\n  text-align: center;\n}\n\n#obbnoaphed .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#obbnoaphed .gt_font_normal {\n  font-weight: normal;\n}\n\n#obbnoaphed .gt_font_bold {\n  font-weight: bold;\n}\n\n#obbnoaphed .gt_font_italic {\n  font-style: italic;\n}\n\n#obbnoaphed .gt_super {\n  font-size: 65%;\n}\n\n#obbnoaphed .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#obbnoaphed .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#obbnoaphed .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#obbnoaphed .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#obbnoaphed .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#obbnoaphed .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#obbnoaphed .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#obbnoaphed .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#obbnoaphed div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"7\" class=\"gt_heading gt_title gt_font_normal\" style>World Value Survey (WVS)</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"7\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Data extract from r4np</td>\n    </tr>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"1\" scope=\"col\"></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"6\" scope=\"colgroup\" id=\"gender\">\n        <div class=\"gt_column_spanner\"><span data-qmd-base64=\"KipHZW5kZXIqKg==\"><span class='gt_from_md'><strong>Gender</strong></span></span></div>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"country\"><span data-qmd-base64=\"KipDb3VudHJ5Kio=\"><span class='gt_from_md'><strong>Country</strong></span></span></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"*female*\">\n        <div class=\"gt_column_spanner\"><span data-qmd-base64=\"KmZlbWFsZSo=\"><span class='gt_from_md'><em>female</em></span></span></div>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"*male*\">\n        <div class=\"gt_column_spanner\"><span data-qmd-base64=\"Km1hbGUq\"><span class='gt_from_md'><em>male</em></span></span></div>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"female_married\">Married</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"female_separated\">Separated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"female_divorced\">Divorced</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"male_married\">Married</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"male_separated\">Separated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"male_divorced\">Divorced</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Bolivia</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">383</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">62</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">27</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">376</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">34</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">24</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Iran</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">448</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">4</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">24</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">518</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">8</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">6</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Iraq</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">442</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">6</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">10</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">423</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">5</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">9</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Japan</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">525</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">4</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">49</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">464</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">1</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">20</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Korea</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">491</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">1</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">1</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">407</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">NA</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">7</td></tr>\n    <tr><td headers=\"country\" class=\"gt_row gt_center\">Egypt</td>\n<td headers=\"female_married\" class=\"gt_row gt_right\">399</td>\n<td headers=\"female_separated\" class=\"gt_row gt_right\">10</td>\n<td headers=\"female_divorced\" class=\"gt_row gt_right\">23</td>\n<td headers=\"male_married\" class=\"gt_row gt_right\">434</td>\n<td headers=\"male_separated\" class=\"gt_row gt_right\">7</td>\n<td headers=\"male_divorced\" class=\"gt_row gt_right\">9</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nLet's dissect what's happening here:\n\n**Step 1: Individual Gender Spanners**\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\ntab_spanner(\n  label = md(\"*female*\"),\n  columns = starts_with(\"female_\")\n)\n```\n:::\n\n\nThis creates a spanner (column group) labeled \"female\" that covers all columns starting with \"female_\". The `md()` function allows us to use markdown formatting – in this case, italics with the asterisks.\n\nThe `starts_with()` function is a \"tidy select\" helper that selects columns based on their names. It's much more reliable than typing out column names manually, especially when your column names follow a pattern.\n\n**Step 2: Overarching Spanner**\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\ntab_spanner(\n  label = md(\"**Gender**\"),\n  columns = starts_with(c(\"female_\", \"male_\")),\n  id = \"gender\"\n)\n```\n:::\n\n\nThis creates a higher-level spanner that encompasses both gender groups. The `columns` argument uses a vector of prefixes to select all columns that start with either \"female_\" or \"male_\". The `id = \"gender\"` gives this spanner a unique identifier that we could reference later if needed.\n\n**Step 3: Column Label Customisation**\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\ncols_label(\n  country = md(\"**Country**\"),\n  ends_with(\"married\") ~ \"Married\",\n  ends_with(\"separated\") ~ \"Separated\", \n  ends_with(\"divorced\") ~ \"Divorced\"\n)\n```\n:::\n\n\nHere's where the magic happens. `cols_label()` lets us rename columns, but it also supports conditional renaming using the `~` formula syntax.\n\n- `country = md(\"**Country**\")`: Directly renames the country column\n- `ends_with(\"married\") ~ \"Married\"`: This says \"for any column that ends with 'married', rename it to 'Married'\"\n\nThis pattern-based renaming is incredibly powerful. Instead of writing:\n\n::: {#tbl-different-correlations .cell class='slide-in'}\n\n```{.r .cell-code}\nfemale_married = \"Married\",\nmale_married = \"Married\",\nfemale_separated = \"Separated\",\nmale_separated = \"Separated\"\n# ... and so on\n```\n:::\n\n\nWe can use the formula syntax to apply the same transformation to multiple columns at once. The results is pretty respectable.\n\n\n\n## Step 4: The NA Problem (Plot Twist!)\n\nBut wait, there's more! Let's add a total column to show the sum across relationship statuses:\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\n# Adding totals - first attempt\nwith_totals <- wide_data %>%\n  mutate(total = rowSums(select(., -country))) %>%\n  gt() %>%\n  # ... rest of our formatting code\n  cols_label(total = md(\"**Total**\"))\n\nwith_totals\n```\n:::\n\n\nLet's break down that `mutate()` line:\n- `select(., -country)`: Selects all columns except `country` (the `.` refers to the current data frame)\n- `rowSums()`: Sums across columns for each row\n- `mutate(total = ...)`: Creates a new column called `total` with these row sums\n\nYou might notice some countries have suspiciously low totals or `NA` values. That's because `rowSums()` doesn't handle `NA` values the way you might expect – if any value in a row is `NA`, the entire sum becomes `NA`.\n\nIn our case, `NA` in the count data doesn't mean \"missing information\" – it means \"zero observations for this combination.\" For example, if a country has no divorced males in the survey, that cell will be `NA`, but for our table purposes, we want to treat it as zero.\n\n## Step 5: The NA Solution\n\nLet's fix the NA problem properly:\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\n# The NA fix\nclean_data <- wide_data %>%\n  # Replace NA with 0 - this makes sense for count data\n  mutate(across(where(is.numeric), ~ if_else(is.na(.), 0, .))) %>%\n  # Now rowSums will work properly\n  mutate(total = rowSums(select(., -country)))\n\nhead(clean_data)\n```\n:::\n\n\nThis code introduces a powerful pattern:\n\n**`across()` for Multiple Column Operations**\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\nmutate(across(where(is.numeric), ~ if_else(is.na(.), 0, .)))\n```\n:::\n\n\n`across()` is a function that applies the same transformation to multiple columns. Let's break it down:\n\n- `where(is.numeric)`: Selects columns based on a condition – in this case, all numeric columns\n- `~ if_else(is.na(.), 0, .)`: This is a formula (notice the `~`) that defines the transformation\n  - `is.na(.)`: Checks if the value is NA (the `.` represents each value)\n  - `if_else(condition, true_value, false_value)`: If the value is NA, replace with 0, otherwise keep the original value\n\nThis is much more efficient than writing separate `mutate()` statements for each column, and it's robust – if you add more numeric columns later, they'll automatically be included in the transformation.\n\n## Step 6: The Full Solution Explained\n\nNow let's put it all together with detailed explanations and a little bit of flair:\n\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\n# Our final, polished table\nfinal_table <- wvs_nona %>%\n  # Step 1: Create counts for each combination\n  count(gender, country, relationship_status) %>%\n  \n  # Step 2: Filter to our relationship statuses of interest\n  filter(relationship_status %in% c(\"married\", \"separated\", \"divorced\")) %>%\n  \n  # Step 3: Reshape from long to wide format\n  pivot_wider(id_cols = country,\n              names_from = c(gender, relationship_status),\n              values_from = n) %>%\n  \n  # Step 4: Handle NAs properly for count data\n  mutate(across(where(is.numeric), ~ if_else(is.na(.), 0, .))) %>%\n  \n  # Step 5: Add row totals\n  mutate(total = rowSums(select(., -country))) %>%\n  \n  # Step 6: Create the GT table\n  gt() %>%\n  \n  # Step 7: Add headers\n  tab_header(\n    title = \"World Value Survey (WVS)\",\n    subtitle = \"Data extract from r4np\"\n  ) %>%\n  \n  # Step 8: Create nested column spanners\n  tab_spanner(\n    label = md(\"*female*\"),\n    columns = starts_with(\"female_\")\n  ) %>%\n  tab_spanner(\n    label = md(\"*male*\"),\n    columns = starts_with(\"male_\")\n  ) %>%\n  tab_spanner(\n    label = md(\"**Gender**\"),\n    columns = starts_with(c(\"female_\", \"male_\")),\n    id = \"gender\"\n  ) %>%\n  \n  # Step 9: Customise column labels\n  cols_label(\n    country = md(\"**Country**\"),\n    total = md(\"**Total**\"),\n    ends_with(\"married\") ~ \"married\",\n    ends_with(\"separated\") ~ \"separated\",\n    ends_with(\"divorced\") ~ \"divorced\"\n  ) %>%\n  \n  # Step 10: Add visual elements\n  gt_plt_bar(column = total) %>%\n  \n  # Step 11: Add footer information\n  tab_footnote(md(\"**Source:**<br>*World Value Survey (2024)*\")) %>%\n  \n  # Step 12: Apply a theme\n  gt_theme_espn()\n\nfinal_table\n```\n:::\n\nAdmittedly, this code chunk is a lot more substantial than going with the standard `gt` table setup, but it certainly looks a lot more audience-ready and accessible \n\nLet me explain the final formatting steps so you can apply those changes to your own tables as well:\n\n**Visual Enhancement with `gt_plt_bar()`**\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\ngt_plt_bar(column = total)\n```\n:::\n\n\nThis function from the `gtExtras` package adds mini bar charts to the total column. It automatically scales the bars based on the values in the column, making it easy to visually compare totals across countries. The bars appear within the table cells themselves.\n\n**Footnotes for Attribution**\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\ntab_footnote(md(\"**Source: **<br>*World Value Survey (2024)*\"))\n```\n:::\n\n\n`tab_footnote()` adds a footnote to the table. The `<br>` is HTML for a line break, and again we're using `md()` to enable markdown formatting for bold text and italics.\n\n**Theming with `gt_theme_espn()`**\n\n::: {.cell class='slide-in'}\n\n```{.r .cell-code}\ngt_theme_espn()\n```\n:::\n\n\nThis applies a pre-built theme that mimics the ESPN sports network styling. The `gtExtras` package includes several pre-built themes that can dramatically change your table's appearance with a single line of code. This is particularly helpful if you want to quickly apply a uniform style to all your tables in a presentation, report or publication.\n\n## Why This Approach Works\n\nThe manual approach we've taken here solves several problems:\n\n1. **Flexibility**: We can style each spanner and column label exactly how we want.\n2. **Maintainability**: The pattern-based selection (`starts_with()`, `ends_with()`) means our code will work even if column names change slightly.\n3. **Scalability**: If we add more countries or relationship statuses, most of the code will still work.\n4. **Readability**: Each step has a clear purpose and the code is self-documenting.\n\n## The Lessons Learned\n\nCreating multi-dimensional tables in `gt` teaches us several important concepts:\n\n1. **Data shape matters**: The structure of your data determines how easy it is to create your desired table. Sometimes reshaping is necessary.\n\n2. **NA handling is context-dependent**: In count data, NA often means zero, but in other contexts, it might mean something else entirely. Therefore, we might have to amend our table values as necessary.\n\n3. **Pattern-based selection is powerful**: Functions like `starts_with()`, `ends_with()`, and `where()` make your code more robust, concise and less prone to errors.\n\n4. **The `~` formula syntax**: This R feature appears in many places (`cols_label()`, `across()`, `ggplot2`) and is worth understanding deeply.\n\n5. **Layered approach**: `gt`'s philosophy of building tables layer by layer makes complex tables a lot more manageable.\n\nThe GT package is incredibly powerful, but like any sophisticated tool, it rewards understanding its patterns and conventions. When your table needs go beyond the basics, don't be afraid to break down the problem into smaller steps and build up your solution incrementally.\n\n## Want to Learn More?\n\n- [GT Package Documentation](https://gt.rstudio.com/) - Comprehensive guide with examples\n- [GT Extras Package](https://jthomasmock.github.io/gtExtras/) - Additional functionality and themes\n- [R for Non-Programmers](https://r4np.com) - If you want to strengthen your R fundamentals\n\nThe key to mastering `gt` (and R in general) is understanding the building blocks and how they combine. Once you grasp these patterns, you'll find yourself creating publication-ready tables with confidence and in no time.\n\nHappy table-making!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}